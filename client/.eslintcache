[{"/mnt/e/REACT/job-finder-react/client/src/components/JobFinder.js":"1","/mnt/e/REACT/job-finder-react/client/src/reportWebVitals.js":"2","/mnt/e/REACT/job-finder-react/client/src/App.js":"3","/mnt/e/REACT/job-finder-react/client/src/components/JobCard.js":"4"},{"size":3210,"mtime":1606753865281,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1606145304587,"results":"7","hashOfConfig":"6"},{"size":223,"mtime":1606146188135,"results":"8","hashOfConfig":"6"},{"size":1386,"mtime":1606750445508,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"f9927l",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/mnt/e/REACT/job-finder-react/client/src/components/JobFinder.js",["21"],"import {React, useState} from 'react'\r\nimport {Box,Container,AppBar,Typography,Grid,TextField,Button, Toolbar} from '@material-ui/core';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport './JobFinder.css'\r\nimport JobCard from './JobCard';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\n\r\nexport default function JobFinder(){\r\n    const axios = require('axios')\r\n    const [query, setQuery] = useState('programmer');\r\n    const [location, setLocation] = useState('New York');\r\n    const [page, setPage] = useState(1)\r\n    const [jobs, setJobs] = useState([]);\r\n\r\n    const searchJobs = async(e) =>{\r\n        e.preventDefault()\r\n       \r\n        if(jobs !== '' && location !== ''){\r\n            const url = `https://remotive.io/api/remote-jobs?limit=4`\r\n            \r\n                axios.get(url)\r\n                .then(function(response){\r\n                    console.log(response.data.jobs);\r\n                    setJobs(response.data.jobs)\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error);\r\n                });\r\n        \r\n        }\r\n    }\r\n\r\n    const handleChange = ()=>{\r\n        \r\n    }\r\n\r\n    return(\r\n    <Box width={1}>\r\n        <AppBar position=\"static\">\r\n        <Toolbar>\r\n        <WorkIcon></WorkIcon>\r\n        <Typography variant=\"h6\" className=\"title\"> \r\n        Job Finder\r\n        </Typography>\r\n        </Toolbar>\r\n        </AppBar>\r\n        <Grid item lg={12}>\r\n            <form className=\"form-job\" noValidate autoComplete=\"off\" onSubmit={searchJobs}>\r\n                <Container lg={6}>\r\n\r\n                <TextField \r\n                    id=\"standard-basic\" \r\n                    label=\"Job\"\r\n                    type=\"text\"\r\n                    value={query}\r\n                    onChange={(e)=>setQuery(e.target.value)} />\r\n\r\n                <TextField \r\n                    id=\"standard-basic\" \r\n                    label=\"Where\"\r\n                    type=\"text\"\r\n                    value={location}\r\n                    onChange={(e)=>setLocation(e.target.value)}/>\r\n\r\n                \r\n                    <Button className=\"buttonSearch\" type=\"submit\" mt={5} variant=\"outlined\" color=\"primary\"> Search</Button>                 \r\n                    <Button className=\"buttonAdvanced\" mt={5}  variant=\"outlined\"> Advanced Search</Button>\r\n                              \r\n                    <div style={{ marginTop: 20, padding: 30 }}>\r\n                    <Grid container spacing={8} direction=\"row\" justify=\"space-evenly\" alignItems=\"center\" >\r\n                    \r\n                    {jobs.map(job=>(\r\n                    <Grid item key={job.id} xs={3}>\r\n                        <JobCard job={job} key={job.id}></JobCard>\r\n                    </Grid>\r\n                    ))}\r\n                    </Grid>\r\n                    </div>\r\n                    <Grid container alignItems=\"center\">\r\n                    </Grid>\r\n\r\n                </Container>\r\n            </form>\r\n            <Box m=\"auto\">\r\n                <Pagination page={page} onChange={handleChange} className=\"pagination-job\" count={10} mt={5} variant=\"outlined\" color=\"primary\" />\r\n            </Box>\r\n        </Grid>\r\n    </Box>\r\n    )\r\n}","/mnt/e/REACT/job-finder-react/client/src/reportWebVitals.js",[],"/mnt/e/REACT/job-finder-react/client/src/App.js",["22"],"import logo from './logo.svg';\nimport './App.css';\nimport JobFinder from './components/JobFinder';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <JobFinder></JobFinder>\n    </div>\n  );\n}\n\nexport default App;\n","/mnt/e/REACT/job-finder-react/client/src/components/JobCard.js",["23"],"import React from 'react'\r\nimport {Card,CardHeader, CardMedia,CardActions, CardContent, Avatar,Button,Typography, makeStyles} from '@material-ui/core'\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport './JobCard.css'\r\n\r\nexport default function JobCard({job}){\r\n\r\n    return(\r\n        <Card id={job.id} variant=\"outlined\" mt={5} mr={4}>\r\n           <CardHeader\r\n            avatar={\r\n            <Avatar aria-label=\"recipe\" src={job.company_logo_url}>R</Avatar>\r\n            }\r\n            title= {job.company_name}\r\n            subheader={'Update '+job.publication_date.substring(0,10)}\r\n      />\r\n            <CardMedia\r\n            image={job.company_logo_url}\r\n            title=\"Paella dish\"\r\n            />\r\n            <CardContent>\r\n                <Typography>\r\n                {job.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                <AccessTimeIcon></AccessTimeIcon>\r\n                {job.job_type}\r\n                <AttachMoneyIcon></AttachMoneyIcon>\r\n                {job.salary}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button color=\"secondary\" size=\"small\" href={job.url} target=\"_blank\">Learn More</Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n\r\n}",{"ruleId":"24","severity":1,"message":"25","line":12,"column":18,"nodeType":"26","messageId":"27","endLine":12,"endColumn":25},{"ruleId":"24","severity":1,"message":"28","line":1,"column":8,"nodeType":"26","messageId":"27","endLine":1,"endColumn":12},{"ruleId":"24","severity":1,"message":"29","line":2,"column":88,"nodeType":"26","messageId":"27","endLine":2,"endColumn":98},"no-unused-vars","'setPage' is assigned a value but never used.","Identifier","unusedVar","'logo' is defined but never used.","'makeStyles' is defined but never used."]